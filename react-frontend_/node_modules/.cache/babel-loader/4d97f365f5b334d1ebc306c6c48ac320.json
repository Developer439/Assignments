{"ast":null,"code":"var _jsxFileName = \"e:\\\\Personal Stuff\\\\Study\\\\Assignments\\\\ReaCTjs\\\\NOSTRA HIRING ASSIGNMENT\\\\react-frontend\\\\src\\\\components\\\\contest\\\\contest.js\";\nimport React from 'react';\nimport '../../style/common/common.scss';\nimport './contest.scss';\nimport { getContests } from '../../services/apis';\n\nclass Contest extends React.Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      const that = this;\n      const result = getContests();\n      result.then(function (res) {\n        if (res.data) {\n          const data = res.data;\n          let contests = [],\n              contestsToShow = [],\n              contest_types = [],\n              contest_types_count = {};\n          contests = data.contests;\n          contestsToShow = contests;\n\n          if (contests && contests.length > 0) {\n            contest_types = contests.map((contest, index) => contest.contest_type);\n            contest_types_count = contest_types.reduce((a, b) => a.set(b, a.get(b) + 1 || 1), new Map());\n            contest_types = [...new Set(contest_types)];\n          }\n\n          that.setState({\n            contests,\n            contestsToShow,\n            contest_types,\n            contest_types_count\n          });\n        } else {// that.NetworkError();\n        }\n      }).catch(function (error) {// that.NetworkError();\n      });\n    };\n\n    this.showContestCategories = (contest_types = []) => {\n      const that = this;\n      const isAllActive = that.state.isAllActive;\n      const active_contest_type = that.state.active_contest_type;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"contest_categories\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: isAllActive ? \"contest_category active\" : \"contest_category\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"contest_category_name\",\n        onClick: () => that.contestTypeFilter(true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, \"All(\", that.state.contests.length, \")\")), contest_types.map(function (contest_type, i) {\n        const isCurrentlyActive = !isAllActive && active_contest_type == contest_type;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: isCurrentlyActive ? \"contest_category  active\" : \" contest_category  \",\n          key: \"sports_\" + i,\n          onClick: () => that.contestTypeFilter(false, contest_type),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 18\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"contest_category_name\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }\n        }, contest_type, \"(\", that.state.contest_types_count.get(contest_type), \")\"));\n      }));\n    };\n\n    this.showContestDetails = (contestsToShow = []) => {\n      const that = this;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"contest_details_sec\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 12\n        }\n      }, that.state.isAllActive && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"title_sec\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 36\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 34\n        }\n      }, \"All Contests\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"sub_title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }\n      }, \"Differnt types\")), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }\n      }, \"Contest Info\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"contest_cards\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }\n      }, contestsToShow.map(function (contest, i) {\n        // const parties = data.match_parties;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"contest_card ui_card ui_card2\",\n          key: \"challenges_\" + i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 18\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"contest_top\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"top dispFlex\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"contest_name\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"rupee\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 47\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 78\n          }\n        }, contest.name)), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }\n        }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n          className: \"scrType\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 23\n          }\n        }, contest.score_type), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"payoutType\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 23\n          }\n        }, contest.payout_type))), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 22\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 37\n          }\n        }, contest.max_participants, \" Members\")), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 22\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 37\n          }\n        }, \"Top \", contest.max_winners, \" wins \")))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"contest_mid\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"prize_sec\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }\n        }, \"PRIZES\", /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"rupee\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 28\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 59\n          }\n        }, contest.prizes), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"rt_trgnl_sml\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 88\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"entry_fee\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }\n        }, \"ENTRY FEE\", /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"rupee\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 31\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 62\n          }\n        }, contest.fee), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"rt_trgnl_sml\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 88\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"btn join\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }\n        }, \"JOIN\")), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"contest_bot\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }\n        }, contest.filled_rooms > 0 && /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }\n        }, contest.filled_rooms, \" \", ' ', \" Rooms Filled \", /*#__PURE__*/React.createElement(\"span\", {\n          className: \"dot extreme_small\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 72\n          }\n        }), \" \", contest.filling_rooms, \" Filling \"), contest.filled_rooms == 0 && /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 41\n          }\n        }, \"Rooms Available\")));\n      })));\n    };\n\n    this.contestTypeFilter = (isAll, contest_type) => {\n      const that = this;\n      let isAllActive = true,\n          active_contest_type = 'ALL';\n      let contestsToShow = [];\n\n      if (!isAll) {\n        isAllActive = false;\n        active_contest_type = contest_type;\n        contestsToShow = that.state.contests.filter(contest => contest.contest_type == contest_type);\n      } else {\n        contestsToShow = that.state.contests;\n      }\n\n      that.setState({\n        contestsToShow,\n        isAllActive,\n        active_contest_type\n      });\n    };\n\n    this.state = {\n      showLoader: false,\n      networkproblem: false,\n      contests: [],\n      contestsToShow: [],\n      contest_types: [],\n      contest_types_count: {},\n      isAllActive: true,\n      active_contest_type: 'ALL'\n    };\n  }\n\n  render() {\n    const that = this;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contest\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"top_sec dispFlex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"arrow left back_arrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header_title dispFlex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 51\n      }\n    }, \"Choose a contest \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }, \"01h 58m 17s \"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content_sec\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, that.showContestCategories(that.state.contest_types), that.showContestDetails(that.state.contestsToShow)));\n  }\n\n}\n\nexport default Contest;","map":{"version":3,"sources":["e:/Personal Stuff/Study/Assignments/ReaCTjs/NOSTRA HIRING ASSIGNMENT/react-frontend/src/components/contest/contest.js"],"names":["React","getContests","Contest","Component","constructor","componentDidMount","that","result","then","res","data","contests","contestsToShow","contest_types","contest_types_count","length","map","contest","index","contest_type","reduce","a","b","set","get","Map","Set","setState","catch","error","showContestCategories","isAllActive","state","active_contest_type","contestTypeFilter","i","isCurrentlyActive","showContestDetails","name","score_type","payout_type","max_participants","max_winners","prizes","fee","filled_rooms","filling_rooms","isAll","filter","showLoader","networkproblem","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../../style/common/common.scss';\r\nimport './contest.scss';\r\nimport { getContests } from '../../services/apis';\r\n\r\nclass Contest extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showLoader: false,\r\n      networkproblem: false,\r\n      contests: [],\r\n      contestsToShow: [],\r\n      contest_types:[],\r\n      contest_types_count:{},\r\n      isAllActive: true,\r\n      active_contest_type:'ALL',\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const that = this\r\n    const result = getContests();\r\n    result.then(function (res) {\r\n      if (res.data) {\r\n        const data = res.data\r\n        let  contests = [], contestsToShow = [], contest_types = [], contest_types_count ={}\r\n        contests = data.contests;\r\n        contestsToShow = contests;\r\n        if(contests && contests.length>0){\r\n          contest_types = contests.map((contest,index) => contest.contest_type)\r\n          contest_types_count =contest_types.reduce((a,b)=>a.set(b,a.get(b)+1||1),new Map)\r\n          contest_types = [...new Set(contest_types)]\r\n        }\r\n        that.setState({ contests, contestsToShow, contest_types, contest_types_count });\r\n      }\r\n      else {\r\n        // that.NetworkError();\r\n      }\r\n    })\r\n      .catch(function (error) {\r\n        // that.NetworkError();\r\n      });\r\n  }\r\n\r\n  showContestCategories = (contest_types = []) => {\r\n    const that = this;\r\n    const isAllActive = that.state.isAllActive;\r\n    const active_contest_type = that.state.active_contest_type;\r\n    return  <div className=\"contest_categories\">\r\n      <div className={isAllActive ? \"contest_category active\" : \"contest_category\"}>\r\n        <div className=\"contest_category_name\" onClick={() => that.contestTypeFilter(true)} >All({that.state.contests.length})</div>\r\n      </div>\r\n      {\r\n        contest_types.map(function (contest_type, i) {\r\n          const isCurrentlyActive = (!isAllActive && (active_contest_type == contest_type));\r\n          return <div className={isCurrentlyActive ? \"contest_category  active\" : \" contest_category  \"}\r\n            key={\"sports_\" + i}\r\n            onClick={() => that.contestTypeFilter(false, contest_type)}\r\n          >\r\n            <div className=\"contest_category_name\">{contest_type}({that.state.contest_types_count.get(contest_type)})</div>\r\n          </div>\r\n        })\r\n      }\r\n    </div>\r\n  }\r\n\r\n  showContestDetails = (contestsToShow = []) => {\r\n    const that = this\r\n    return <div className=\"contest_details_sec\">\r\n        {that.state.isAllActive && <div className=\"title_sec\"> \r\n                            <div><span className=\"title\">All Contests</span>\r\n                            <span className=\"sub_title\">Differnt types</span></div>\r\n                            <div>Contest Info</div>\r\n                        </div>\r\n        }\r\n        {/* <span className=\"noC\">({contestsToShow.length})</span> */}\r\n      \r\n      <div className=\"contest_cards\">\r\n        {contestsToShow.map(function (contest, i) {\r\n          // const parties = data.match_parties;\r\n          return <div className=\"contest_card ui_card ui_card2\" key={\"challenges_\" + i}>\r\n            <div className=\"contest_top\">\r\n              <div className=\"top dispFlex\">\r\n                <div className=\"contest_name\"><span className=\"rupee\"></span><span>{contest.name}</span></div>\r\n                <div> <span className=\"scrType\">{contest.score_type}</span>\r\n                      <span className=\"payoutType\">{contest.payout_type}</span> \r\n                </div>\r\n              </div>\r\n              <div>\r\n                <div><span>{}</span><span>{contest.max_participants} Members</span></div>\r\n                <div><span>{}</span><span>Top {contest.max_winners} wins </span></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"contest_mid\">\r\n                <div className=\"prize_sec\">\r\n                PRIZES<div><span className=\"rupee\"></span><span>{contest.prizes}</span><span className=\"rt_trgnl_sml\"></span></div>\r\n                </div>\r\n                <div className=\"entry_fee\">\r\n                ENTRY FEE<div><span className=\"rupee\"></span><span>{contest.fee}</span><span className=\"rt_trgnl_sml\"></span></div>\r\n                </div>\r\n                <div className='btn join'>JOIN</div>\r\n            </div>\r\n            <div className=\"contest_bot\"> \r\n             {contest.filled_rooms>0 && \r\n                        <div>{contest.filled_rooms} {' '} Rooms Filled <span className=\"dot extreme_small\"></span> {contest.filling_rooms} Filling </div>\r\n             }{\r\n               contest.filled_rooms==0&&<div>Rooms Available</div>\r\n             }\r\n            </div>\r\n          </div>\r\n        })}\r\n\r\n      </div>\r\n    </div>\r\n  }\r\n\r\n  \r\n  contestTypeFilter = (isAll, contest_type) => {\r\n    const that = this;\r\n    let isAllActive = true, active_contest_type = 'ALL'\r\n    let contestsToShow = [];\r\n    if (!isAll) {\r\n      isAllActive = false;\r\n      active_contest_type = contest_type\r\n      contestsToShow = that.state.contests.filter((contest) => contest.contest_type == contest_type)\r\n    } else {\r\n      contestsToShow = that.state.contests\r\n    }\r\n    that.setState({ contestsToShow, isAllActive, active_contest_type })\r\n  }\r\n\r\n\r\n    render() {\r\n      const that = this;\r\n      return <div className=\"contest\">\r\n        <div className=\"top_sec dispFlex\">\r\n          <i className=\"arrow left back_arrow\"></i>\r\n          <div className='header_title dispFlex'> <span>Choose a contest </span>\r\n          <span>01h 58m 17s </span></div>\r\n          {/* {that.showCards(that.state.banners)} */}\r\n        </div>\r\n        <div className=\"content_sec\">\r\n    \r\n          {that.showContestCategories(that.state.contest_types)}\r\n          {that.showContestDetails(that.state.contestsToShow)}\r\n        </div>\r\n  \r\n      </div>;\r\n    }\r\n  }\r\n\r\n  export default Contest;"]},"metadata":{},"sourceType":"module"}