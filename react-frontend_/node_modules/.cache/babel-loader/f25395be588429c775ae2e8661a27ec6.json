{"ast":null,"code":"import * as types from '../actions/action-types';\nimport { getCookie } from '../common/cookie';\nconst initialState = {\n  active: {},\n  seatchart: {},\n  selSeats: {\n    /* passengerDetails: [], baseFare: 0, routeOffer: 0, taxes: 0, totalWithDiscount: 0, totalWithoutDiscount: 0 */\n  },\n  selPick: {},\n  selDrop: {},\n  selContact: {\n    std: '+91',\n    email: getCookie().e ? getCookie().e : window.loggedInEmail ? window.loggedInEmail : localStorage.getItem('tyEmail') ? localStorage.getItem('tyEmail') : '',\n    phone: getCookie().m ? getCookie().m : window.loggedInMobile ? window.loggedInMobile : localStorage.getItem('tyMobile') ? localStorage.getItem('tyMobile') : ''\n  },\n  selGST: {\n    no: '',\n    comp: ''\n  },\n  otpPhone: '',\n  otp: '',\n  showOtp: false,\n  activeSeat: false,\n  rtc: false,\n  concession: \"\",\n  concessionNumber: \"\",\n  // isValidateOtp: window.loggedInMobile && (getCookie().m ? getCookie().m : (window.loggedInMobile ? window.loggedInMobile : (localStorage.getItem('tyMobile') ? localStorage.getItem('tyMobile') : ''))) == window.loggedInMobile ? true : false,\n  isValidateOtp: false\n};\n\nconst seatchartReducer = function (state = initialState, action) {\n  let active = state.active;\n  let seatchart = state.seatchart;\n  let selSeats = state.selSeats;\n  let selPick = state.selPick;\n  let selDrop = state.selDrop;\n  let selContact = state.selContact;\n\n  switch (action.type) {\n    case types.GET_SEATCHART_STATUS:\n      if (action.seatNo) {\n        active[action.seatNo] = action.active;\n\n        if (!action.active) {\n          seatchart[action.seatNo] = false;\n          state.selSeats[action.seatNo] = false;\n          state.selPick[action.seatNo] = false;\n          state.selDrop[action.seatNo] = false;\n          state.selContact[action.seatNo] = false;\n        }\n      }\n\n      return Object.assign({}, state, {\n        active\n      });\n    // ------------------------------------- //\n\n    case types.GET_SEATCHART_SUCCESS:\n      if (action.seatNo) {\n        seatchart[action.seatNo] = action.data;\n      }\n\n      return Object.assign({}, state, {\n        seatchart\n      });\n    // ------------------------------------- //\n\n    case types.UPDATE_SEAT_SELECTED:\n      if (action.seatNo) {\n        selSeats[action.seatNo] = action.data;\n      }\n\n      return Object.assign({}, state, {\n        selSeats\n      });\n    // ------------------------------------- //\n\n    case types.UPDATE_PICK_SELECTED:\n      if (action.seatNo) {\n        selPick[action.seatNo] = action.data;\n      }\n\n      return Object.assign({}, state, {\n        selPick\n      });\n    // ------------------------------------- //\n\n    case types.UPDATE_DROP_SELECTED:\n      if (action.seatNo) {\n        selDrop[action.seatNo] = action.data;\n      }\n\n      return Object.assign({}, state, {\n        selDrop\n      });\n    // ------------------------------------- //\n\n    case types.UPDATE_PASS_SELECTED:\n      if (action.seatNo) {\n        selSeats[action.seatNo].passengerDetails = action.data;\n      }\n\n      return Object.assign({}, state, {\n        selSeats\n      });\n    // ------------------------------------- //\n\n    case types.UPDATE_CONTACT_SELECTED:\n      if (action.seatNo) {\n        selContact[action.seatNo] = action.data;\n      }\n\n      return Object.assign({}, state, {\n        selContact\n      });\n    // ------------------------------------- //\n\n    case types.UPDATE_OTP_PHONE:\n      return Object.assign({}, state, {\n        otpPhone: action.data\n      });\n    // ------------------------------------- //\n\n    case types.UPDATE_OTP:\n      return Object.assign({}, state, {\n        otp: action.data\n      });\n    // ------------------------------------- //\n\n    case types.SHOW_OTP:\n      return Object.assign({}, state, {\n        showOtp: action.data,\n        activeSeat: action.seat,\n        rtc: action.rtc\n      });\n    // ------------------------------------- //\n\n    case types.VALIDATE_OTP:\n      return Object.assign({}, state, {\n        isValidateOtp: action.data,\n        showOtp: false\n      });\n    // ------------------------------------- //\n\n    case types.UPDATE_GST:\n      return Object.assign({}, state, {\n        selGST: action.data\n      });\n    // ------------------------------------- //\n\n    case types.RESET_STATE:\n      return Object.assign({}, state, {\n        active: {},\n        seatchart: {},\n        selSeats: {},\n        selPick: {},\n        selDrop: {}\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default seatchartReducer;","map":{"version":3,"sources":["e:/Personal Stuff/Study/Assignments/ReaCTjs/NOSTRA HIRING ASSIGNMENT/react-frontend/src/reducers/seatchart-reducer.js"],"names":["types","getCookie","initialState","active","seatchart","selSeats","selPick","selDrop","selContact","std","email","e","window","loggedInEmail","localStorage","getItem","phone","m","loggedInMobile","selGST","no","comp","otpPhone","otp","showOtp","activeSeat","rtc","concession","concessionNumber","isValidateOtp","seatchartReducer","state","action","type","GET_SEATCHART_STATUS","seatNo","Object","assign","GET_SEATCHART_SUCCESS","data","UPDATE_SEAT_SELECTED","UPDATE_PICK_SELECTED","UPDATE_DROP_SELECTED","UPDATE_PASS_SELECTED","passengerDetails","UPDATE_CONTACT_SELECTED","UPDATE_OTP_PHONE","UPDATE_OTP","SHOW_OTP","seat","VALIDATE_OTP","UPDATE_GST","RESET_STATE"],"mappings":"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","sourcesContent":["import * as types from '../actions/action-types';\r\nimport { getCookie } from '../common/cookie';\r\n\r\nconst initialState = {\r\n  active: {},\r\n  seatchart: {},\r\n  selSeats: { /* passengerDetails: [], baseFare: 0, routeOffer: 0, taxes: 0, totalWithDiscount: 0, totalWithoutDiscount: 0 */ },\r\n  selPick: {},\r\n  selDrop: {},\r\n  selContact: {\r\n    std: '+91',\r\n    email: getCookie().e ? getCookie().e : (window.loggedInEmail ? window.loggedInEmail : (localStorage.getItem('tyEmail') ? localStorage.getItem('tyEmail') : '')),\r\n    phone: getCookie().m ? getCookie().m : (window.loggedInMobile ? window.loggedInMobile : (localStorage.getItem('tyMobile') ? localStorage.getItem('tyMobile') : ''))\r\n  },\r\n  selGST: {no: '', comp: ''},\r\n  otpPhone: '',\r\n  otp: '',\r\n  showOtp: false,\r\n  activeSeat: false,\r\n  rtc: false,\r\n  concession: \"\",\r\n  concessionNumber: \"\",\r\n  // isValidateOtp: window.loggedInMobile && (getCookie().m ? getCookie().m : (window.loggedInMobile ? window.loggedInMobile : (localStorage.getItem('tyMobile') ? localStorage.getItem('tyMobile') : ''))) == window.loggedInMobile ? true : false,\r\n  isValidateOtp: false\r\n};\r\n\r\nconst seatchartReducer = function(state = initialState, action) {\r\n  let active = state.active;\r\n  let seatchart = state.seatchart;\r\n  let selSeats = state.selSeats;\r\n  let selPick = state.selPick;\r\n  let selDrop = state.selDrop;\r\n  let selContact = state.selContact;\r\n  switch(action.type) {\r\n    case types.GET_SEATCHART_STATUS:\r\n    if (action.seatNo) {\r\n      active[action.seatNo] = action.active;\r\n      if (!action.active) {\r\n        seatchart[action.seatNo] = false;\r\n        state.selSeats[action.seatNo] = false;\r\n        state.selPick[action.seatNo] = false;\r\n        state.selDrop[action.seatNo] = false;\r\n        state.selContact[action.seatNo] = false;\r\n      }\r\n    }\r\n    return Object.assign({}, state, {\r\n      active\r\n    });\r\n// ------------------------------------- //\r\n    case types.GET_SEATCHART_SUCCESS:\r\n    if (action.seatNo) {\r\n      seatchart[action.seatNo] = action.data;\r\n    }\r\n    return Object.assign({}, state, {\r\n      seatchart\r\n    });\r\n// ------------------------------------- //\r\n    case types.UPDATE_SEAT_SELECTED:\r\n      if (action.seatNo) {\r\n        selSeats[action.seatNo] = action.data;\r\n      }\r\n      return Object.assign({}, state, {\r\n        selSeats\r\n      });\r\n// ------------------------------------- //\r\n    case types.UPDATE_PICK_SELECTED:\r\n      if (action.seatNo) {\r\n        selPick[action.seatNo] = action.data;\r\n      }\r\n      return Object.assign({}, state, {\r\n        selPick\r\n      });\r\n// ------------------------------------- //\r\n    case types.UPDATE_DROP_SELECTED:\r\n      if (action.seatNo) {\r\n        selDrop[action.seatNo] = action.data;\r\n      }\r\n      return Object.assign({}, state, {\r\n        selDrop\r\n      });\r\n// ------------------------------------- //\r\n    case types.UPDATE_PASS_SELECTED:\r\n      if (action.seatNo) {\r\n        selSeats[action.seatNo].passengerDetails = action.data;\r\n      }\r\n      return Object.assign({}, state, {\r\n        selSeats\r\n      });\r\n// ------------------------------------- //\r\n    case types.UPDATE_CONTACT_SELECTED:\r\n      if (action.seatNo) {\r\n        selContact[action.seatNo] = action.data;\r\n      }\r\n      return Object.assign({}, state, {\r\n        selContact\r\n      });\r\n// ------------------------------------- //\r\n    case types.UPDATE_OTP_PHONE:\r\n      return Object.assign({}, state, {\r\n        otpPhone: action.data\r\n      });\r\n// ------------------------------------- //\r\n    case types.UPDATE_OTP:\r\n      return Object.assign({}, state, {\r\n        otp: action.data\r\n      });\r\n// ------------------------------------- //\r\n    case types.SHOW_OTP:\r\n      return Object.assign({}, state, {\r\n        showOtp: action.data,\r\n        activeSeat: action.seat,\r\n        rtc: action.rtc\r\n      });\r\n// ------------------------------------- //\r\n    case types.VALIDATE_OTP:\r\n      return Object.assign({}, state, {\r\n        isValidateOtp: action.data,\r\n        showOtp: false\r\n      });\r\n// ------------------------------------- //\r\n    case types.UPDATE_GST:\r\n      return Object.assign({}, state, {\r\n        selGST: action.data\r\n      });\r\n// ------------------------------------- //\r\n    case types.RESET_STATE:\r\n      return Object.assign({}, state, {\r\n        active: {},\r\n        seatchart: {},\r\n        selSeats: {},\r\n        selPick: {},\r\n        selDrop: {}\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default seatchartReducer;\r\n"]},"metadata":{},"sourceType":"module"}