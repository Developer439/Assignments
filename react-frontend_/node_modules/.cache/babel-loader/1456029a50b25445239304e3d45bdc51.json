{"ast":null,"code":"var _jsxFileName = \"e:\\\\Personal Stuff\\\\Study\\\\Assignments\\\\ReaCTjs\\\\NOSTRA HIRING ASSIGNMENT\\\\react-frontend\\\\src\\\\components\\\\wallet\\\\wallet.js\";\nimport React from 'react';\nimport '../../style/common/common.scss';\nimport './wallet.scss';\nimport logo from \"../../logo.svg\";\nimport { getWalletInfo } from '../../services/apis';\n\nclass Wallet extends React.Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      const that = this;\n      const result = getWalletInfo();\n      result.then(function (res) {\n        if (res.data) {\n          const data = res.data;\n          console.log(data);\n          let wallet_balance = 0,\n              transactions = [],\n              withdrawals = [],\n              wip_info = {\n            count: 0,\n            amt: 0\n          };\n          let wallet_balanceL = data.wallet_balance,\n              transactionsL = data.transactions,\n              withdrawalsL = data.withdrawals;\n          if (wallet_balanceL && wallet_balanceL > 0) wallet_balance = wallet_balanceL;\n          if (transactionsL && transactionsL.length > 0) transactions = transactionsL;\n\n          if (withdrawalsL && withdrawalsL.length > 0) {\n            amt = 0;\n            count = 0;\n            withdrawals = withdrawalsL;\n            withdrawals.forEach(withdrawal => {\n              if (withdrawal.status == 'in_progress') {\n                count++;\n                amt += amt;\n              }\n            });\n            wip_info.amt = amt;\n            wip_info.count = count;\n          }\n\n          that.setState({\n            wallet_balance,\n            transactions,\n            withdrawals,\n            wip_info\n          });\n        } else {// that.NetworkError();\n        }\n      }).catch(function (error) {// that.NetworkError();\n      });\n    };\n\n    this.showTransactons = (transactions = []) => {\n      const that = this; // let walletTransactions = transactions.filter((transaction) => transaction.type != \"join_contest\"),\n      //     contestTransactions = transactions.filter((transaction) => transaction.type == \"join_contest\");\n\n      console.log(transactions);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"transactions_sec\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }\n      }, transactions.map((transaction, key) => {\n        const txnTxt = that.getTransactionTxt(transaction);\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: txnTxt !== '' ? \"ui_card dispFlex txn_card\" : \"dispNone\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"dispFlex top\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"amt_sec\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 16\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"rupee\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 41\n          }\n        }), transaction.amount, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 92\n          }\n        }, \"\\xA0\")), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"contest_category_img\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 16\n          }\n        }, \" \", /*#__PURE__*/React.createElement(\"img\", {\n          src: logo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 55\n          }\n        }), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"txn_det_txt\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }\n        }, \" \", \" Money \", transaction.status == \"success\" ? \"Successfully\" : \"Unsuccessful\"));\n      }));\n    };\n\n    this.getTransactionTxt = transaction => {\n      let that = this;\n      let txnTxt = '',\n          txnStatus = '';\n\n      switch (transaction.type) {\n        case \"add_to_wallet\":\n          txnTxt = \"Add money \";\n          txnStatus = that.getTransactionStatus(transaction.status);\n          break;\n\n        case \"remove_from_wallet\":\n          txnTxt = \"Remove money \";\n          txnStatus = that.getTransactionStatus(transaction.status);\n          break;\n\n        case \"join_contest\":\n          txnTxt = \"Join a paid Contest\";\n          break;\n      }\n\n      return txnTxt.trim() != '' ? txnTxt + ' ' + txnStatus : '';\n    };\n\n    this.getTransactionStatus = status => status == 'success' ? \"Successful\" : \"Unsuccessful\";\n\n    this.state = {\n      showLoader: false,\n      networkproblem: false,\n      wallet_balance: 0,\n      transactions: [],\n      withdrawals: [],\n      wip_info: {\n        count: 0,\n        amt: 0\n      }\n    };\n  }\n\n  render() {\n    const that = this;\n    console.log(that.state);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wallet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"top_sec center dispFlex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"arrow left back_arrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header_title dispFlex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, \" Trasaction History\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content_sec\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dispFlex balance_card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, \"TOTAL BALANCE\", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 47\n      }\n    }, \"\\xA0\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"rupee\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 67\n      }\n    }), that.state.wallet_balance), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, that.state.wip_info.count, \" withdrawal in progress\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui_card dispFlex wip_card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contest_category_img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 52\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"details_sec\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"rupee\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 18\n      }\n    }), that.state.wip_info.amt, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 74\n      }\n    }, \"\\xA0\"), \" withdrawal in progress\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }, \" withdrawan from your winnings\"))), that.showTransactons(that.state.transactions)));\n  }\n\n}\n\nexport default Wallet;","map":{"version":3,"sources":["e:/Personal Stuff/Study/Assignments/ReaCTjs/NOSTRA HIRING ASSIGNMENT/react-frontend/src/components/wallet/wallet.js"],"names":["React","getWalletInfo","Wallet","Component","constructor","componentDidMount","that","result","then","res","data","console","log","wallet_balance","transactions","withdrawals","wip_info","count","amt","wallet_balanceL","transactionsL","withdrawalsL","length","forEach","withdrawal","status","setState","catch","error","showTransactons","map","transaction","key","txnTxt","getTransactionTxt","amount","logo","txnStatus","type","getTransactionStatus","trim","state","showLoader","networkproblem","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gCAAP;AACA,OAAO,eAAP;;AAEA,SAASC,aAAT,QAA8B,qBAA9B;;AAGA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AAGnCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAYdC,iBAZc,GAYM,MAAM;AACxB,YAAMC,IAAI,GAAG,IAAb;AACA,YAAMC,MAAM,GAAGN,aAAa,EAA5B;AACAM,MAAAA,MAAM,CAACC,IAAP,CAAY,UAAUC,GAAV,EAAe;AACzB,YAAIA,GAAG,CAACC,IAAR,EAAc;AACZ,gBAAMA,IAAI,GAAGD,GAAG,CAACC,IAAjB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,cAAMG,cAAc,GAAG,CAAvB;AAAA,cAA0BC,YAAY,GAAG,EAAzC;AAAA,cAA6CC,WAAW,GAAG,EAA3D;AAAA,cAA8DC,QAAQ,GAAG;AAACC,YAAAA,KAAK,EAAC,CAAP;AAASC,YAAAA,GAAG,EAAC;AAAb,WAAzE;AACA,cAAIC,eAAe,GAAGT,IAAI,CAACG,cAA3B;AAAA,cAA2CO,aAAa,GAAGV,IAAI,CAACI,YAAhE;AAAA,cAA8EO,YAAY,GAAGX,IAAI,CAACK,WAAlG;AACA,cAAII,eAAe,IAAIA,eAAe,GAAC,CAAvC,EAA2CN,cAAc,GAAGM,eAAjB;AAC3C,cAAIC,aAAa,IAAIA,aAAa,CAACE,MAAd,GAAqB,CAA1C,EAA6CR,YAAY,GAAGM,aAAf;;AAC7C,cAAGC,YAAY,IAAIA,YAAY,CAACC,MAAb,GAAoB,CAAvC,EAA0C;AACxCJ,YAAAA,GAAG,GAAG,CAAN;AAASD,YAAAA,KAAK,GAAG,CAAR;AACTF,YAAAA,WAAW,GAAGM,YAAd;AACAN,YAAAA,WAAW,CAACQ,OAAZ,CAAoBC,UAAU,IAAI;AAChC,kBAAGA,UAAU,CAACC,MAAX,IAAmB,aAAtB,EAAoC;AAClCR,gBAAAA,KAAK;AAAGC,gBAAAA,GAAG,IAAEA,GAAL;AACT;AACF,aAJD;AAKAF,YAAAA,QAAQ,CAACE,GAAT,GAAeA,GAAf;AACAF,YAAAA,QAAQ,CAACC,KAAT,GAAiBA,KAAjB;AACD;;AACDX,UAAAA,IAAI,CAACoB,QAAL,CAAc;AAAEb,YAAAA,cAAF;AAAkBC,YAAAA,YAAlB;AAAgCC,YAAAA,WAAhC;AAA6CC,YAAAA;AAA7C,WAAd;AACD,SAnBD,MAoBK,CACH;AACD;AACF,OAxBD,EAyBGW,KAzBH,CAyBS,UAAUC,KAAV,EAAiB,CACtB;AACD,OA3BH;AA4BD,KA3Ca;;AAAA,SA6CdC,eA7Cc,GA6CI,CAACf,YAAY,GAAC,EAAd,KAAqB;AACrC,YAAMR,IAAI,GAAG,IAAb,CADqC,CAErC;AACA;;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYE,YAAZ;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIA,YAAY,CAACgB,GAAb,CAAiB,CAACC,WAAD,EAAaC,GAAb,KAAmB;AAClC,cAAMC,MAAM,GAAG3B,IAAI,CAAC4B,iBAAL,CAAuBH,WAAvB,CAAf;AACF,4BAAM;AAAK,UAAA,SAAS,EAAEE,MAAM,KAAG,EAAT,GAAY,2BAAZ,GAAwC,UAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACN;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACK;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAyB;AAAM,UAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAzB,EAAyDF,WAAW,CAACI,MAArE,eAA4E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA5E,CADL,eAEK;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAuC;AAAK,UAAA,GAAG,EAAEC,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAvC,MAFL,CADM,eAKN;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAwCL,WAAW,CAACN,MAAZ,IAAsB,SAAtB,GAAiC,cAAjC,GAAkD,cAA1F,CALM,CAAN;AAOD,OATC,CAFJ,CADF;AAiBD,KAnEa;;AAAA,SAqEdS,iBArEc,GAqEOH,WAAD,IAAiB;AACnC,UAAIzB,IAAI,GAAG,IAAX;AACA,UAAI2B,MAAM,GAAG,EAAb;AAAA,UAAiBI,SAAS,GAAG,EAA7B;;AACE,cAAON,WAAW,CAACO,IAAnB;AACE,aAAK,eAAL;AAAqBL,UAAAA,MAAM,GAAC,YAAP;AAAqBI,UAAAA,SAAS,GAAG/B,IAAI,CAACiC,oBAAL,CAA0BR,WAAW,CAACN,MAAtC,CAAZ;AAA2D;;AACrG,aAAK,oBAAL;AAA0BQ,UAAAA,MAAM,GAAC,eAAP;AAAwBI,UAAAA,SAAS,GAAG/B,IAAI,CAACiC,oBAAL,CAA0BR,WAAW,CAACN,MAAtC,CAAZ;AAA2D;;AAC7G,aAAK,cAAL;AAAoBQ,UAAAA,MAAM,GAAC,qBAAP;AAA6B;AAHnD;;AAKA,aAAOA,MAAM,CAACO,IAAP,MAAe,EAAf,GAAkBP,MAAM,GAAC,GAAP,GAAWI,SAA7B,GAAuC,EAA9C;AACH,KA9Ea;;AAAA,SAgFdE,oBAhFc,GAgFUd,MAAD,IAAYA,MAAM,IAAE,SAAR,GAAkB,YAAlB,GAA+B,cAhFpD;;AAEZ,SAAKgB,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,KADD;AAEXC,MAAAA,cAAc,EAAE,KAFL;AAGX9B,MAAAA,cAAc,EAAC,CAHJ;AAIXC,MAAAA,YAAY,EAAE,EAJH;AAKXC,MAAAA,WAAW,EAAE,EALF;AAMXC,MAAAA,QAAQ,EAAE;AAACC,QAAAA,KAAK,EAAC,CAAP;AAASC,QAAAA,GAAG,EAAC;AAAb;AANC,KAAb;AAQD;;AAyEC0B,EAAAA,MAAM,GAAG;AACP,UAAMtC,IAAI,GAAG,IAAb;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACmC,KAAjB;AACF,wBAAS;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACL;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,CADK,eAMP;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAlC,oBAAsD;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtD,EAAsFnC,IAAI,CAACmC,KAAL,CAAW5B,cAAjG,CADF,eAEE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBP,IAAI,CAACmC,KAAL,CAAWzB,QAAX,CAAoBC,KAA7C,4BAFF,CADJ,eAKI;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAuC;AAAK,MAAA,GAAG,EAAEmB,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvC,MADF,eAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EACmC9B,IAAI,CAACmC,KAAL,CAAWzB,QAAX,CAAoBE,GADvD,eAC2D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAD3D,4BADF,eAIE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAJF,CAFF,CALJ,EAcOZ,IAAI,CAACuB,eAAL,CAAqBvB,IAAI,CAACmC,KAAL,CAAW3B,YAAhC,CAdP,CANO,CAAT;AAyBC;;AAlHgC;;AAqHnC,eAAeZ,MAAf","sourcesContent":["import React from 'react';\r\nimport '../../style/common/common.scss';\r\nimport './wallet.scss';\r\nimport logo from '../../logo.svg';\r\nimport { getWalletInfo } from '../../services/apis';\r\n\r\n\r\nclass Wallet extends React.Component {\r\n\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showLoader: false,\r\n      networkproblem: false,\r\n      wallet_balance:0,\r\n      transactions: [],\r\n      withdrawals: [],\r\n      wip_info :{count:0,amt:0}\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const that = this\r\n    const result = getWalletInfo();\r\n    result.then(function (res) {\r\n      if (res.data) {\r\n        const data = res.data\r\n        console.log(data)\r\n        let   wallet_balance = 0, transactions = [], withdrawals = [],wip_info = {count:0,amt:0};\r\n        let wallet_balanceL = data.wallet_balance, transactionsL = data.transactions, withdrawalsL = data.withdrawals;\r\n        if( wallet_balanceL && wallet_balanceL>0 ) wallet_balance = wallet_balanceL;\r\n        if( transactionsL && transactionsL.length>0) transactions = transactionsL;\r\n        if(withdrawalsL && withdrawalsL.length>0) {\r\n          amt = 0; count = 0;\r\n          withdrawals = withdrawalsL;\r\n          withdrawals.forEach(withdrawal => {\r\n            if(withdrawal.status=='in_progress'){\r\n              count++;amt+=amt;\r\n            }\r\n          });\r\n          wip_info.amt = amt;\r\n          wip_info.count = count;\r\n        }\r\n        that.setState({ wallet_balance, transactions, withdrawals, wip_info });\r\n      }\r\n      else {\r\n        // that.NetworkError();\r\n      }\r\n    })\r\n      .catch(function (error) {\r\n        // that.NetworkError();\r\n      });\r\n  }\r\n\r\n  showTransactons = (transactions=[]) => {\r\n    const that = this\r\n    // let walletTransactions = transactions.filter((transaction) => transaction.type != \"join_contest\"),\r\n    //     contestTransactions = transactions.filter((transaction) => transaction.type == \"join_contest\");\r\n    console.log(transactions)\r\n    return(\r\n      <div className=\"transactions_sec\">\r\n        {\r\n          transactions.map((transaction,key)=>{\r\n            const txnTxt = that.getTransactionTxt(transaction)\r\n          return<div className={txnTxt!==''?\"ui_card dispFlex txn_card\":\"dispNone\"}>\r\n          <div className=\"dispFlex top\">\r\n               <div className=\"amt_sec\"><span className=\"rupee\"></span>{transaction.amount}<span>&nbsp;</span></div>\r\n               <div className=\"contest_category_img\"> <img src={logo}></img> </div>\r\n          </div>\r\n          <div className=\"txn_det_txt\"> {} Money {transaction.status == \"success\"? \"Successfully\" : \"Unsuccessful\"}</div>\r\n        </div>\r\n        }\r\n        )}\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n  getTransactionTxt = (transaction) => {\r\n    let that = this\r\n    let txnTxt = '', txnStatus = '';\r\n      switch(transaction.type){\r\n        case \"add_to_wallet\":txnTxt=\"Add money \"; txnStatus = that.getTransactionStatus(transaction.status); break;\r\n        case \"remove_from_wallet\":txnTxt=\"Remove money \"; txnStatus = that.getTransactionStatus(transaction.status); break;\r\n        case \"join_contest\":txnTxt=\"Join a paid Contest\";break;\r\n      }\r\n      return txnTxt.trim()!=''?txnTxt+' '+txnStatus:'';\r\n  } \r\n\r\n  getTransactionStatus = (status) => status=='success'?\"Successful\":\"Unsuccessful\";\r\n\r\n\r\n    render() {\r\n      const that = this\r\n      console.log(that.state)\r\n    return ( <div className=\"wallet\">\r\n        <div className=\"top_sec center dispFlex\">\r\n          <i className=\"arrow left back_arrow\"></i>\r\n          <div className='header_title dispFlex'> Trasaction History \r\n        </div>\r\n      </div>\r\n      <div className=\"content_sec\">\r\n          <div className=\"dispFlex balance_card\">\r\n            <div className=\"top\">TOTAL BALANCE<span>&nbsp;</span> <span className=\"rupee\"></span>{that.state.wallet_balance}</div>\r\n            <div className=\"bottom\">{that.state.wip_info.count} withdrawal in progress</div>\r\n          </div>\r\n          <div className=\"ui_card dispFlex wip_card\">\r\n            <div className=\"contest_category_img\"> <img src={logo}></img> </div>\r\n            <div className=\"details_sec\">\r\n              <div className=\"top\">\r\n                 <span className=\"rupee\"></span>{that.state.wip_info.amt}<span>&nbsp;</span> withdrawal in progress\r\n              </div>\r\n              <div className=\"bottom\"> withdrawan from your winnings</div>\r\n            </div>\r\n          </div>\r\n            {that.showTransactons(that.state.transactions)}\r\n          {/* {that.showContestCategories(that.state.contest_types)}\r\n          {that.showContestDetails(that.state.contestsToShow)} */}\r\n        </div>\r\n      </div>) \r\n    }\r\n  }\r\n\r\n  export default Wallet;"]},"metadata":{},"sourceType":"module"}